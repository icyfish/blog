{"version":3,"file":"component---src-templates-blog-js-4aa39c01fb7e8414f727.js","mappings":"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","sources":["webpack://blog/./src/components/Bio.js","webpack://blog/./src/components/TableOfContents.js","webpack://blog/./src/templates/blog.js","webpack://blog/./src/utils/helpers.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"AUTO\", \"WEBP\", \"AVIF\"]}\n        src=\"../../static/images/photo.jpg\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      {/* <p>111</p> */}\n    </div>\n  )\n}\n\nexport default Bio\n","import React, { useEffect, useState } from \"react\"\nimport \"./TableOfContents.css\"\n\nconst TableOfContents = ({ headings }) => {\n  const headingList = headings.map(item => {\n    return {\n      ...item,\n      id: `#${item.value.replace(/\\s+/g, \"-\").toLowerCase()}`,\n    }\n  })\n  const activeId = useActiveId(headingList)\n\n  if (headings.length === 0) return null\n\n  return (\n    <ul className=\"table_list\">\n      <h3 className=\"title\">Table of contents</h3>\n      <div className=\"headings\">\n        {headingList.map(heading => {\n          const isActive = `#${activeId}` === heading.id\n          const className = isActive ? \"active\" : \"\"\n\n          if (heading.depth > 4) {\n            return <div />\n          }\n          return (\n            <li\n              key={heading.id}\n              style={{ marginLeft: `${heading.depth * 10}px` }}\n            >\n              <a href={heading.id} className={className}>\n                {heading.value}\n              </a>\n            </li>\n          )\n        })}\n      </div>\n    </ul>\n  )\n}\n\nfunction useActiveId(headingList) {\n  const [activeId, setActiveId] = useState(``)\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      entries => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting) {\n            setActiveId(entry.target.id)\n          }\n        })\n      },\n      { rootMargin: `0% 0% -80% 0%` }\n    )\n    headingList.forEach(item => {\n      const target = document.querySelector(item.id)\n      if (!target) return\n      observer.observe(target)\n    })\n\n    return () => {\n      headingList.forEach(item => {\n        const target = document.querySelector(item.id)\n        if (!target) return\n        observer.unobserve(target)\n      })\n    }\n  }, [headingList])\n\n  return activeId\n}\n\nexport default TableOfContents\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Bio from \"../components/Bio\"\nimport Layout from \"../components/Layout\"\nimport Seo from \"../components/Seo\"\nimport TableOfContents from \"../components/TableOfContents\"\nimport { rhythm, scale } from \"../utils/typography\"\nimport { formatReadingTime } from \"../utils/helpers\"\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      {post.frontmatter.toc && <TableOfContents headings={post.headings} />}\n      <PageContent post={post} location={location} />\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ‚Üê {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} ‚Üí\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nfunction PageContent({ post }) {\n  return (\n    <article\n      className=\"blog-post\"\n      itemScope\n      itemType=\"http://schema.org/Article\"\n    >\n      <header>\n        <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n        <p\n          style={{\n            ...scale(-1 / 5),\n            display: \"block\",\n            marginBottom: rhythm(1),\n            marginTop: rhythm(-4 / 5),\n          }}\n        >\n          {post.frontmatter.date}\n          {/* <span style={{ marginLeft: \"10px\", color: \"#6d191980\" }}>\n              {post.wordCount.words} words\n            </span> */}\n          <span style={{ marginLeft: \"10px\" }}>\n            {formatReadingTime(post.timeToRead)}\n          </span>\n        </p>\n      </header>\n      <section\n        dangerouslySetInnerHTML={{ __html: post.html }}\n        itemProp=\"articleBody\"\n      />\n      <hr />\n      <footer>\n        <Bio />\n      </footer>\n    </article>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      headings {\n        value\n        id\n        depth\n      }\n      timeToRead\n      wordCount {\n        words\n      }\n      frontmatter {\n        toc\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        draft\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n","export function formatReadingTime(minutes) {\n  let cups = Math.round(minutes / 5)\n  if (cups > 5) {\n    return `${new Array(Math.round(cups / Math.E))\n      .fill(\"üç±\")\n      .join(\"\")} ${minutes} min read`\n  } else {\n    return `${new Array(cups || 1).fill(\"‚òïÔ∏è\").join(\"\")} ${minutes} min read`\n  }\n}"],"names":["Bio","_data$site$siteMetada","_data$site$siteMetada2","data","useStaticQuery","site","siteMetadata","author","social","React","className","StaticImage","layout","formats","src","width","height","quality","alt","__imageData","require","_ref","headings","headingList","map","item","id","value","replace","toLowerCase","activeId","setActiveId","useState","useEffect","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","target","rootMargin","document","querySelector","observe","unobserve","useActiveId","length","heading","depth","key","style","marginLeft","href","PageContent","_ref2","post","itemScope","itemType","itemProp","frontmatter","title","scale","display","marginBottom","rhythm","marginTop","date","formatReadingTime","timeToRead","dangerouslySetInnerHTML","__html","html","location","markdownRemark","siteTitle","previous","next","Layout","Seo","description","excerpt","toc","TableOfContents","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel","minutes","cups","Math","round","Array","E","fill","join"],"sourceRoot":""}